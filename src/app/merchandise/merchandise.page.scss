.form-control-sm,
.custom-select-sm,
.input-group-sm {
    max-width: 200px;
}
.mat-radio-button ~ .mat-radio-button {
    margin-left: 16px;
  }
:host ::ng-deep .mat-radio-container{
    height: 15px;
    width: 15px;
  }
  :host ::ng-deep .mat-radio-outer-circle{
    height: 15px;
    width: 15px;
  }
  :host ::ng-deep .mat-radio-inner-circle{
    height: 15px;
    width: 15px;
  }

  :host ::ng-deep .cdk-overlay-container {
    z-index:2000 !important;
  }

  :host ::ng-deep .mat-radio-button .mat-radio-ripple{
    height: 30px; /*double of your required circle radius*/
    width: 30px;  /*double of your required circle radius*/
    left: calc(50% - 15px); /*'10px'-same as your required circle radius*/
    top: calc(50% - 15px); /*'10px'-same as your required circle radius*/
  }

//   :host ::ng-deep .mat-button-toggle-group .mat-button-toggle-button  .mat-button-toggle-label-content{
//     height: 13px !important;
//     font-size: 14px; 
//     margin: auto;
//   }
:host ::ng-deep .mat-button-toggle-label-content {
    line-height: 15px !important; 
}


.save:hover {
    text-decoration: underline;
}
.spinner-border {
    margin-left: 20px;
    width: 20px;
    height: 20px;
}
#pic-model{
    z-index: 1000px !important;
}
.flexbin {
    display: flex;
    overflow: hidden;
    flex-wrap: wrap;
    margin: -2.5px;
}
.flexbin:after {
    content: "";
    flex-grow: 999999999;
    min-width: 300px;
    height: 0;
}
.flexbin > * {
    position: relative;
    display: block;
    height: 300px;
    margin: 2.5px;
    flex-grow: 1;
}
.flexbin > * > img {
    height: 300px;
    object-fit: cover;
    max-width: 100%;
    min-width: 100%;
    vertical-align: bottom;
}
.flexbin.flexbin-margin {
    margin: 2.5px;
}
@media (max-width: 980px) {
    .flexbin {
        display: flex;
        overflow: hidden;
        flex-wrap: wrap;
        margin: -2.5px;
    }
    .flexbin:after {
        content: "";
        flex-grow: 999999999;
        min-width: 150px;
        height: 0;
    }
    .flexbin > * {
        position: relative;
        display: block;
        height: 150px;
        margin: 2.5px;
        flex-grow: 1;
    }
    .flexbin > * > img {
        height: 150px;
        object-fit: cover;
        max-width: 100%;
        min-width: 100%;
        vertical-align: bottom;
    }
    .flexbin.flexbin-margin {
        margin: 2.5px;
    }
}
@media (max-width: 400px) {
    .flexbin {
        display: flex;
        overflow: hidden;
        flex-wrap: wrap;
        margin: -2.5px;
    }
    .flexbin:after {
        content: "";
        flex-grow: 999999999;
        min-width: 100px;
        height: 0;
    }
    .flexbin > * {
        position: relative;
        display: block;
        height: 100px;
        margin: 2.5px;
        flex-grow: 1;
    }
    .flexbin > * > img {
        height: 100px;
        object-fit: cover;
        max-width: 100%;
        min-width: 100%;
        vertical-align: bottom;
    }
    .flexbin.flexbin-margin {
        margin: 2.5px;
    }
}
// Default variables that can be overrided
$flexbin-row-height: 100px !default;
$flexbin-space: 5px !default;

$flexbin-tablet-max: 980px !default;
$flexbin-row-height-tablet: 150px !default;
$flexbin-space-tablet: $flexbin-space !default;

$flexbin-phone-max: 400px !default;
$flexbin-row-height-phone: 100px !default;
$flexbin-space-phone: $flexbin-space !default;

// Minxin for customize multiple Flexbin layout
// For example, 300px height for desktop devices, 150px height for mobile devices
@mixin flexbin($row-height, $space) {
    display: flex;
    overflow: hidden;
    flex-wrap: wrap;
    margin: -$space / 2;

    // Let final row align left fit if images are not enough to fill
    // If the gap is very small, fill the final row
    &:after {
        content: "";
        flex-grow: 999999999; // avoid final row zoom too much to fit width
        min-width: $row-height; // avoid small gap in final row (< $row-height)
        height: 0;
    }

    > * {
        position: relative;
        display: block;
        height: $row-height;
        margin: $space / 2;
        flex-grow: 1;

        > img {
            height: $row-height;
            object-fit: cover;
            max-width: 100%;
            min-width: 100%;
            vertical-align: bottom;
        }
    }

    // Add margin around flexbin gallery
    // Visual margin is the same with space between rows
    &.flexbin-margin {
        margin: $space / 2;
    }
}

// CSS class for basic usage
.flexbin {
    // Desktop devices
    @include flexbin($flexbin-row-height, $flexbin-space);

    // Tablet devices
    @media (max-width: $flexbin-tablet-max) {
        @include flexbin($flexbin-row-height-tablet, $flexbin-space-tablet);
    }

    // Phone devices
    @media (max-width: $flexbin-phone-max) {
        @include flexbin($flexbin-row-height-phone, $flexbin-space-phone);
    }
}

// preview image kmz
/* The Modal (background) */

#previewMerchandiseImgModel {
    display: none;
    /* Hidden by default */
    background-color: rgb(0, 0, 0);
    /* Fallback color */
    background-color: rgba(0, 0, 0, 0.9);
    /* Black w/ opacity */
}

/* Modal Content (image) */

.previewMerchandiseImgModel-content {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
}

/* Caption of Modal Image */

#caption {
    margin: auto;
    display: block;
    width: 80%;
    max-width: 700px;
    text-align: center;
    color: #ccc;
    padding: 10px 0;
    height: 150px;
}

/* Add Animation */

.previewMerchandiseImgModel-content,
#caption {
    animation-name: zoom;
    animation-duration: 0.6s;
}

@keyframes zoom {
    from {
        transform: scale(0.1);
    }
    to {
        transform: scale(1);
    }
}

/* The Close Button */

.close {
    position: absolute;
    top: 15px;
    right: 35px;
    color: #f1f1f1;
    font-size: 40px;
    font-weight: bold;
    transition: 0.3s;
}

.close:hover,
.close:focus {
    color: #bbb;
    text-decoration: none;
    cursor: pointer;
}

/* 100% Image Width on Smaller Screens */

@media only screen and (max-width: 700px) {
    .previewMerchandiseImgModel-content {
        width: 100%;
    }
}
.btndelete {

    background-color: rgb(189, 51, 80);

    color: white;

  }

.btndelete:hover {

    background-color:  #740110;

    color: white;

  }
//----------
